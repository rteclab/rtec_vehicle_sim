<?xml version="1.0"?>
<!--robot name="virtual_robot" xmlns:xacro="http://www.ros.org/wiki/xacro"-->
<robot xmlns:xacro="http://ros.org/wiki/xacro" name="car">

  <!-- Global namespace -->
  <xacro:arg name="robot_name" default="rtec-vehicle" />
  
  <!-- inertial parameter macros -->
  <xacro:macro name="chassis_inertial_params">
    <origin xyz="0.1477 0 0" rpy="0 0 0" />
    <mass value="4.0" />
    <inertia ixx="0.010609" ixy="0"          ixz="0"
                            iyy="0.050409"   iyz="0"
                                             izz="0.05865" />
  </xacro:macro>
  <xacro:macro name="left_wheels_inertial_params">
    <origin xyz="0 0 0.0225" rpy="0 0 0" />
    <mass value="0.34055" />
    <inertia ixx="0.00026046" ixy="0"          ixz="0"
                              iyy="0.00026046" iyz="0"
                                               izz="0.00041226" />
  </xacro:macro>

  <xacro:macro name="right_wheels_inertial_params">
    <origin xyz="0 0 0.0225" rpy="0 0 0" />
    <mass value="0.34055" />
    <inertia ixx="0.00026046" ixy="0"          ixz="0"
                              iyy="0.00026046" iyz="0"
                                               izz="0.00041226" />
  </xacro:macro>

  <xacro:macro name="steering_hinge_inertial_params">
    <origin xyz="0 0 0" rpy="0 0 0" />
    <mass value="0.100" />
    <inertia ixx="4E-06" ixy="0"           ixz="0"
                              iyy="4E-06"  iyz="0"
                                                izz="4E-06" />
  </xacro:macro>

  <xacro:macro name="hokuyo_inertial_params">
    <origin xyz="0 0 0" rpy="0 0 0" />
    <mass value="0.130" />
    <inertia ixx="4E-06" ixy="0"           ixz="0"
                              iyy="4E-06"  iyz="0"
                                                izz="4E-06" />
  </xacro:macro>


  <!-- geometry macros -->
  <xacro:macro name="chassis_geometry">
    <origin xyz="0.46 -0.135 -0.180" rpy="1.57 0 3.14" />
    <geometry>
      <mesh filename="$(find rtec_vehicle_sim)/models/meshes/chassis.stl" scale="0.000990 0.0009375 0.0009375"/>
    </geometry>
  </xacro:macro>

  <xacro:macro name="left_rear_wheel_geometry">
    <origin xyz="0 0 0" rpy="0 0 0" />
    <geometry>
      <mesh filename="$(find rtec_vehicle_sim)/models/meshes/left_wheel.stl" />
    </geometry>
  </xacro:macro>

  <xacro:macro name="right_rear_wheel_geometry">
    <origin xyz="0 0 0" rpy="0 0 0" />
    <geometry>
      <mesh filename="$(find rtec_vehicle_sim)/models/meshes/right_wheel.stl" />
    </geometry>
  </xacro:macro>

  <xacro:macro name="left_front_wheel_geometry">
    <origin xyz="0 0 0" rpy="0 0 0" />
    <geometry>
      <mesh filename="$(find rtec_vehicle_sim)/models/meshes/left_wheel.stl" />
    </geometry>
  </xacro:macro>

  <xacro:macro name="right_front_wheel_geometry">
    <origin xyz="0 0 0" rpy="0 0 0" />
    <geometry>
      <mesh filename="$(find rtec_vehicle_sim)/models/meshes/right_wheel.stl" />
    </geometry>
  </xacro:macro>

  <xacro:macro name="left_steering_hinge_geometry">
    <origin xyz="0 0 0" rpy="0 0 0" />
    <geometry>
      <mesh filename="$(find rtec_vehicle_sim)/models/meshes/hinge.stl" />
    </geometry>
  </xacro:macro>

  <xacro:macro name="right_steering_hinge_geometry">
    <origin xyz="0 0 0" rpy="0 0 0" />
    <geometry>
      <mesh filename="$(find rtec_vehicle_sim)/models/meshes/hinge.stl" />
    </geometry>
  </xacro:macro>

  <xacro:macro name="left_wheels_collision_geometry">
    <origin xyz="0 0 0.0225" rpy="0 0 0" />
    <geometry>
      <cylinder length="0.045" radius="0.05" />
    </geometry>
  </xacro:macro>

  <xacro:macro name="right_wheels_collision_geometry">
    <origin xyz="0 0 0.0225" rpy="0 0 0" />
    <geometry>
      <cylinder length="0.045" radius="0.05" />
    </geometry>
  </xacro:macro>

  <material name="black">
    <color rgba="0.0 0.0 0.0 1.0"/>
  </material>

  <material name="blue">
    <color rgba="0.0 0.0 0.8 1.0"/>
  </material>

  <material name="green">
    <color rgba="0.0 0.8 0.0 1.0"/>
  </material>

  <material name="grey">
    <color rgba="0.2 0.2 0.2 1.0"/>
  </material>

  <material name="orange">
    <color rgba="${255/255} ${108/255} ${10/255} 1.0"/>
  </material>

  <material name="brown">
    <color rgba="${222/255} ${207/255} ${195/255} 1.0"/>
  </material>

  <material name="red">
    <color rgba="0.8 0.0 0.0 1.0"/>
  </material>

  <material name="white">
    <color rgba="1.0 1.0 1.0 1.0"/>
  </material>

  <!-- Add chassis and it's inertia link -->
  <!--link name="base_footprint"/-->
  <!--link name="base_link"/-->

  <!-- Simply replace chassis link to base_link -->
  <link name="base_link">
    <visual>
      <origin xyz="0.46 -0.135 -0.180" rpy="1.57 0 3.14" />
      <geometry>
        <mesh filename="$(find rtec_vehicle_sim)/models/meshes/chassis.stl" scale="0.000990 0.0009375 0.0009375"/>        
      </geometry>
      <material name="red" />
    </visual>
    <collision>
      <xacro:chassis_geometry />
    </collision>
    <inertial>
      <xacro:chassis_inertial_params />
    </inertial>
  </link>

  <!--joint name="base_footprint_link_joint" type="fixed">    
    <parent link="base_footprint" />
    <child link="base_link" />
    <origin xyz="0 0 0" rpy="0 0 0" />
  </joint-->

  <!--joint name="base_link_joint" type="fixed">    
    <parent link="base_link" />
    <child link="chassis" />
    <origin xyz="0 0 0.05" rpy="0 0 0" />
  </joint-->

  <!--link name="chassis_inertia">
    <inertial>
      <xacro:chassis_inertial_params />
    </inertial>
  </link>

  <joint name="chassis_inertia_joint" type="fixed">
    <origin xyz="0 0 0" rpy="0 0 0" />
    <parent link="chassis" />
    <child link="chassis_inertia" />
  </joint-->

  <!-- Add the left rear wheel with its joints and tranmissions -->
  <link name="left_rear_wheel">
    <inertial>
      <xacro:left_wheels_inertial_params />
    </inertial>
    <visual>
      <xacro:left_rear_wheel_geometry />
      <material name="black">
        <color rgba="0 0 0 1"/>
      </material>
    </visual>
    <collision>
      <xacro:left_wheels_collision_geometry />
    </collision>
  </link>

  <joint name="left_rear_wheel_joint" type="continuous">
    <origin xyz="0 0.1 0" rpy="1.5708 0 0" />
    <parent link="base_link" />
    <child link="left_rear_wheel" />
    <axis xyz="0 0 -1" />
    <limit effort="10" velocity="100" />
  </joint>

  <!-- Add the right rear wheel with its joints and tranmissions -->
  <link name="right_rear_wheel">
    <inertial>
      <xacro:right_wheels_inertial_params />
    </inertial>
    <visual>
      <xacro:right_rear_wheel_geometry />
      <material name="black" />
    </visual>
    <collision>
      <xacro:right_wheels_collision_geometry />
    </collision>
  </link>

  <joint name="right_rear_wheel_joint" type="continuous">
    <origin xyz="0 -0.1 0" rpy="1.5708 0 0" />
    <parent link="base_link" />
    <child link="right_rear_wheel" />
    <axis xyz="0 0 -1" />
    <limit effort="10" velocity="100" />
  </joint>

  <!-- Add the left front wheel with its joints and tranmissions -->
  <link name="left_front_wheel">
    <inertial>
      <xacro:left_wheels_inertial_params />
    </inertial>
    <visual>
      <xacro:left_front_wheel_geometry />
      <material name="black" />
    </visual>
    <collision>
      <xacro:left_wheels_collision_geometry />
    </collision>
  </link>

  <joint name="left_front_wheel_joint" type="continuous">
    <origin xyz="0 0 0" rpy="1.5708 0 0" />
    <parent link="left_steering_hinge" />
    <child link="left_front_wheel" />
    <axis xyz="0 0 -1" />
    <limit effort="10" velocity="100" />
  </joint>
  
  <link name="left_steering_hinge">
    <inertial>
      <xacro:steering_hinge_inertial_params />
    </inertial>
    <visual>
      <xacro:left_steering_hinge_geometry />
      <material name="grey" />
    </visual>
  </link>

  <joint name="left_steering_hinge_joint" type="revolute">
    <origin xyz="0.325 0.1 0" rpy="0 1.5708 0" />
    <parent link="base_link" />
    <child link="left_steering_hinge" />
    <axis xyz="-1 0 0" />
    <limit lower="-1.0" upper="1.0" effort="10" velocity="100" />
  </joint>

  <!-- Add the left front wheel with its joints and tranmissions -->
  <link name="right_front_wheel">
    <inertial>
      <xacro:right_wheels_inertial_params />
    </inertial>
    <visual>
      <xacro:right_front_wheel_geometry />
      <material name="black" />
    </visual>
    <collision>
      <xacro:right_wheels_collision_geometry />
    </collision>
  </link>

  <joint name="right_front_wheel_joint" type="continuous">
    <origin xyz="0 0 0" rpy="1.5708 0 0" />
    <parent link="right_steering_hinge" />
    <child link="right_front_wheel" />
    <axis xyz="0 0 -1" />
    <limit effort="10" velocity="100"/>
  </joint>

  <link name="right_steering_hinge">
    <inertial>
      <xacro:steering_hinge_inertial_params />
    </inertial>
    <visual>
      <xacro:right_steering_hinge_geometry />
      <material name="grey" />
    </visual>
  </link>

  <joint name="right_steering_hinge_joint" type="revolute">
    <origin xyz="0.325 -0.1 0" rpy="0 1.5708 0" />
    <parent link="base_link" />
    <child link="right_steering_hinge" />
    <axis xyz="-1 0 0" />
    <limit lower="-1.0" upper="1.0" effort="10" velocity="100" />
  </joint>

  <!-- Add Hokuyo laser scanner -->
  <link name="laser">
    <inertial>
      <xacro:hokuyo_inertial_params />
    </inertial>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.1 0.1 0.1"/>
      </geometry>
    </collision>
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <mesh filename="$(find rtec_vehicle_sim)/models/meshes/hokuyo.stl"/>
        <material name="grey" />
      </geometry>
    </visual>
  </link>

  <joint name="hokuyo_joint" type="fixed">
    <origin xyz="0.125 0.0 0.155" rpy="0 0 0"/>
    <parent link="base_link" />
    <child link="laser" />
    <axis xyz="0 0 1" />
  </joint>

  <link name="camera">
    <inertial>
      <mass value="1e-5" />
      <origin xyz="0 0 0.25" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
    <collision>
      <origin xyz="0 0 0.25" rpy="0 0 0"/>
      <geometry>
        <box size="0.033 0.175 0.030"/>
      </geometry>
    </collision>
    <visual>
      <origin xyz="0 0 0.025" rpy="0 0 0"/>
      <geometry>
        <box size="0.033 0.175 0.030"/>
      </geometry>
      <material name="green"/>
    </visual>
  </link>

  <joint name="camera_link_joint" type="fixed">
    <origin xyz="0.390 0 0.025" rpy="0 0 0"/>
    <parent link="base_link"/>
    <child link="camera"/>
    <axis xyz="0 0 1" />
  </joint>

  <link name="camera_link_optical"></link>
  
  <joint name="camera_optical_joint" type="fixed">
    <parent link="camera"/>
    <child link="camera_link_optical"/>
    <origin xyz="0 0 0" rpy="${-pi/2} 0 ${-pi/2}"/>
  </joint>
 
  <!-- Gazebo references -->
  <gazebo reference="base_link">
    <mu1 value="0.0"/>
    <mu2 value="0.0"/>
    <kp  value="10000000.0" />
    <kd  value="1.0" />
    <material>Gazebo/Orange</material>
  </gazebo>

  <gazebo reference="left_rear_wheel">
    <mu1 value="1.0"/>
    <mu2 value="1.0"/>
    <kp  value="10000000.0" />
    <kd  value="1.0" />
    <fdir1 value="1 0 0"/>
    <material>Gazebo/Black</material>
  </gazebo>

  <gazebo reference="right_rear_wheel">
    <mu1 value="1.0"/>
    <mu2 value="1.0"/>
    <kp  value="10000000.0" />
    <kd  value="1.0" />
    <fdir1 value="1 0 0"/>
    <material>Gazebo/Black</material>
  </gazebo>

  <gazebo reference="left_front_wheel">
    <mu1 value="1.0"/>
    <mu2 value="1.0"/>
    <kp  value="10000000.0" />
    <kd  value="1.0" />
    <fdir1 value="0 0 1"/>
    <material>Gazebo/Black</material>
  </gazebo>

  <gazebo reference="right_front_wheel">
    <mu1 value="1.0"/>
    <mu2 value="1.0"/>
    <kp  value="10000000.0" />
    <kd  value="1.0" />
    <fdir1 value="0 0 1"/>
    <material>Gazebo/Black</material>
  </gazebo>
  
  <gazebo reference="laser">
    <material>Gazebo/Silver</material>
  </gazebo>

  <gazebo reference="link">
    <material>Gazebo/Red</material>
  </gazebo>

  <gazebo reference="laser">
    <sensor type="ray" name="laser_scanner">
    <always_on>true</always_on>
    <visualize>true</visualize>
    <update_rate>3</update_rate>
    <ray>
      <scan>
        <horizontal>
          <samples>360</samples>
          <resolution>1</resolution>
          <min_angle>${-pi}</min_angle>
          <max_angle>${pi}</max_angle>
        </horizontal>
      </scan>
      <range>
        <min>0.30</min>
        <max>25.0</max>
        <resolution>0.1</resolution>
      </range>
    </ray>
      <plugin name="scan" filename="libgazebo_ros_ray_sensor.so">
        <ros>
          <remapping>~/out:=scan</remapping>
        </ros>
        <output_type>sensor_msgs/LaserScan</output_type>
        <frame_name>laser</frame_name>
      </plugin>
    </sensor>
  </gazebo>

  <gazebo reference="camera">
    <sensor type="camera" name="left_sensor">
      <update_rate>30.0</update_rate>
      <camera>
        <horizontal_fov>1.74</horizontal_fov>
        <image>
          <width>1920</width>
          <height>1080</height>
          <format>B8G8R8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>30.0</updateRate>
        <cameraName>/$(arg robot_name)/camera</cameraName>
        <imageTopicName>image</imageTopicName>
        <cameraInfoTopicName>rgb/camera_info</cameraInfoTopicName>
        <frameName>camera_link_optical</frameName>
        <hackBaseline>0</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>

  <gazebo>
    <plugin name="gazebo_plugins" filename="libgazebo_ros_ackermann_drive.so">
      <ros>
        <namespace></namespace>
        <remapping>cmd_vel:=cmd_vel</remapping>
        <remapping>odom:=odom</remapping>
        <remapping>distance:=distance</remapping>
      </ros>

      <update_rate>20.0</update_rate>

      <!--wheel_separation></wheel_separation>
      <wheel_base></wheel_base>
      <wheel_radius></wheel_radius-->
      
      <!-- wheels -->
      <front_left_joint>left_front_wheel_joint</front_left_joint>
      <front_right_joint>right_front_wheel_joint</front_right_joint>
      <rear_left_joint>left_rear_wheel_joint</rear_left_joint>
      <rear_right_joint>right_rear_wheel_joint</rear_right_joint>
      <left_steering_joint>left_steering_hinge_joint</left_steering_joint>
      <right_steering_joint>right_steering_hinge_joint</right_steering_joint>
      <steering_wheel_joint>steering_joint</steering_wheel_joint>

      <!-- Max absolute steer angle for tyre in radians-->
      <!-- Any cmd_vel angular z greater than this would be capped -->
      <max_steer>0.6458</max_steer>

      <!-- Max absolute steering angle of steering wheel -->
      <!--max_steering_angle>7.85</max_steering_angle-->
      <max_steering_angle>1.0</max_steering_angle>

      <!-- Max absolute linear speed in m/s -->
      <max_speed>20</max_speed>

      <!-- PID tuning -->
      <!--left_steering_pid_gain>20.1 0 0.1001</left_steering_pid_gain>
      <left_steering_i_range>0 0</left_steering_i_range>
      <right_steering_pid_gain>20.1 0 0.1001</right_steering_pid_gain>
      <right_steering_i_range>0 0</right_steering_i_range>
      <linear_velocity_pid_gain>3 0 0.1</linear_velocity_pid_gain>
      <linear_velocity_i_range>0 0</linear_velocity_i_range-->

      <left_steering_pid_gain>25.1 0 0.1001</left_steering_pid_gain>
      <left_steering_i_range>0 0</left_steering_i_range>
      <right_steering_pid_gain>25.1 0 0.1001</right_steering_pid_gain>
      <right_steering_i_range>0 0</right_steering_i_range>
      <linear_velocity_pid_gain>3 0 0.1</linear_velocity_pid_gain>
      <linear_velocity_i_range>0 0</linear_velocity_i_range>

      <!-- output -->
      <publish_odom>true</publish_odom>
      <publish_odom_tf>true</publish_odom_tf>
      <publish_wheel_tf>true</publish_wheel_tf>
      <publish_distance>true</publish_distance>

      <odometry_frame>odom</odometry_frame>
      <robot_base_frame>base_link</robot_base_frame>

    </plugin>
  </gazebo>

  
  <!-- camera class (spawn parameters) -->
  <!--link name="link">
    <inertial>
      <mass value="1e-5" />
      <origin xyz="0 0 0.25" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
    <collision>
      <origin xyz="0 0 0.25" rpy="0 0 0"/>
      <geometry>
        <box size="0.033 0.175 0.030"/>
      </geometry>
    </collision>
    <visual>
      <origin xyz="0 0 0.025" rpy="0 0 0"/>
      <geometry>
        <box size="0.033 0.175 0.030"/>
      </geometry>
      <material name="red"/>
    </visual>
  </link>

  <joint name="joint" type="fixed">
    <origin xyz="0.390 0 0.025" rpy="0 0 0"/>
    <parent link="chassis"/>
    <child link="link"/>
    <axis xyz="0 0 1" />
  </joint-->


  <!-- camera lenses -->
  <!--link name="camera_link">
    <inertial>
      <mass value="1e-5" />
      <origin xyz="-2.5 0 1.75" rpy="0 .57 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link>
  <link name="right_link">
    <inertial>
      <mass value="1e-5" />
      <origin xyz="-2.5 0 1.75" rpy="0 .57 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link>

  <joint name="left_joint" type="fixed">
    <origin xyz="-2.5 0 1.75" rpy="0 .57 0"/>
    <parent link="link"/>
    <child link="camera_link"/>
    <axis xyz="0 0 1" />
  </joint>
  <joint name="right_joint" type="fixed">
    <origin xyz="0 -0.06 0.025" rpy="0 0 0"/>
    <parent link="link"/>
    <child link="right_link"/>
    <axis xyz="0 0 1" />
  </joint-->

  

  <!-- Camera lens are not visualized -->
  <!--gazebo reference="camera-link">
    <material>Gazebo/Green</material>
  </gazebo>

  <gazebo reference="right-link">
    <material>Gazebo/Green</material>
  </gazebo-->

  <!-- hokuyo -->
  <!--xacro:unless value="$(optenv DISABLE_GAZEBO_LASER false)">
    <gazebo reference="laser">
      <material>Gazebo/Grey</material>
      <sensor type="ray" name="hokuyo_sensor">
        <pose>0 0 0.0124 0 0 0</pose>
        <visualize>false</visualize>
        <update_rate>40</update_rate>
        <ray>
          <scan>
            <horizontal>
              <samples>1081</samples>
              <resolution>1</resolution>
              <min_angle>-2.3561944902</min_angle>
              <max_angle>2.3561944902</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.1</min>
            <max>30.0</max>
            <resolution>0.01</resolution>
          </range>
          <noise>
            <mean>0.0</mean>
            <stddev>0.01</stddev>
          </noise>
        </ray>
        <plugin name="hokuyo_controller" filename="libgazebo_ros_laser.so">
          <topicName>/$(arg robot_name)/scan</topicName>
          <frameName>laser</frameName>
        </plugin>
      </sensor>
    </gazebo>
  </xacro:unless-->



  <!-- camera object -->
  <!--xacro:unless value="$(optenv DISABLE_GAZEBO_CAMERA false)">
    <gazebo reference="camera_link">
      <sensor type="camera" name="left_sensor">
        <update_rate>30.0</update_rate>
        <camera name="front_camera">
          <horizontal_fov>1.74</horizontal_fov>
          <image>
            <width>1920</width>
            <height>1080</height>
            <format>B8G8R8</format>
          </image>
          <clip>
            <near>0.02</near>
            <far>300</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>
        </camera>
        <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
          <alwaysOn>true</alwaysOn>
          <updateRate>30.0</updateRate>
          <cameraName>/$(arg robot_name)/camera</cameraName>
          <imageTopicName>image</imageTopicName>
          <cameraInfoTopicName>rgb/camera_info</cameraInfoTopicName>
          <frameName>camera_link</frameName>
          <hackBaseline>0</hackBaseline>
          <distortionK1>0.0</distortionK1>
          <distortionK2>0.0</distortionK2>
          <distortionK3>0.0</distortionK3>
          <distortionT1>0.0</distortionT1>
          <distortionT2>0.0</distortionT2>
        </plugin>
      </sensor>
    </gazebo>
  </xacro:unless-->

  <!-- Gazebo plugins -->
  <!--gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>/rtec_vehicle</robotNamespace>
    </plugin>
  </gazebo-->

  

  <!--gazebo>
    <plugin name="car_gazebo_plugin" filename="libcar_gazebo_plugin.so">
    </plugin>
  </gazebo-->
  
  <!--gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>/$(arg robot_name)</robotNamespace>
      <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
    </plugin>
  </gazebo-->

  <!-- Odometry (cheap hack) -->
  <!--gazebo>
    <plugin name="p3d_base_controller" filename="libgazebo_ros_p3d.so">
      <alwaysOn>true</alwaysOn>
      <updateRate>50.0</updateRate>
      <bodyName>base_link</bodyName>
      <topicName>/$(arg robot_name)/ground_truth</topicName>
      <gaussianNoise>0.01</gaussianNoise>
      <frameName>world</frameName>
      <xyzOffsets>0 0 0</xyzOffsets>
      <rpyOffsets>0 0 0</rpyOffsets>
    </plugin>
  </gazebo-->
</robot>
